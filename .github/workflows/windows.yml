name: CI Windows

on:
  workflow_call:

jobs:
  setup:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: webview
      - name: Setup V
        shell: bash
        run: |
          curl -Lo v_windows.zip https://github.com/vlang/v/releases/latest/download/v_windows.zip
          7z x v_windows.zip
          mv v ~/v && ~/v/v symlink
      - name: Setup V module
        run: |
          bash -c "mkdir -p ~/.vmodules/ttytm && mv webview ~/.vmodules/ttytm/webview"
          v run $HOME/.vmodules/ttytm/webview/build.vsh --silent
      - name: Save cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/v
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}

  test:
    needs: setup
    runs-on: windows-latest
    strategy:
      matrix:
        cc: [gcc] # [tcc, gcc, msvc]
        optimization: ['', '-W -cstrict']
        # exclude:
        #   - cc: tcc
        #     optimization: '-W -cstrict'
      fail-fast: false
    env:
      VFLAGS: -cg -cc ${{ matrix.cc }}
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/v
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Symlink V
        run: ~/v/v symlink
      - name: Compile V
        run: v -showcc self && v doctor
      - name: Build examples
        run: |
          $exampleDirs = Get-ChildItem -Path "$HOME/.vmodules/ttytm/webview/examples" -Depth 0 -Directory
          foreach ($dir in $exampleDirs) {
              $cmd = "v $dir"
              if ($dir.FullName -match "emoji-picker") {
                  $cmd += "\main.v"
              }
              Write-Output $cmd
              Invoke-Expression $cmd
          }
